ORM	

постгрес подружить с рельсами в database.yaml

rake db:create - создать базу

Table:
name ("Pen", "Pencil")
price (12, 8)

class Product<ActiveRecord::Base
end

//Insert
r=Product.new(name: 'Ruler', price: 10)
r.save

//select
pr = Product.first
pr.name
pr.price = 13
pr.save

//Миграции
############1################
rails generate migration CreateProduct

def up
	create_table :products do |t|
		t.string :name, limit: 32
		t.integer :price
	end
end

def down
	drop_table :products
end

Можно сделать просто change, down машина сама сгенерирует

############2################
rake db:migrate

консоль рельсы:
rails c

Создать файл в models/product.rb :

class Product<ActiveRecord::Base

end

############3################
rails generate migration AddDescriptionToProduct

def change
	add_column :products, :description, :string, default: ''
end

---- заюзать gem faker

select id, name
from products
where price < 10
order by price
limit

or

Product.select('id, name').where('price<10').order('price').limit(2) - просто сформируем запрос, но пойдёт позже, как только надо будет
Product.select('id, name').where('price<10').order('price').limit(2).all - пойдёт в базу

----- rusrails.ru

############Удаление################

User.where(name: 'Edward').delete_all

ДЗ это плюс тесты
gemfile "rspec and rspec-rails"

класс ордер сделать
цена в долларах, у класса продукта есть метод, который будет возвращать цену в гривне
добавить поля которые будут иметь габариты товара
